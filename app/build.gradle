plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def _versionCode = rootProject.ext.android.versionCode
def _versionName = rootProject.ext.android.versionName
def _compileSdkVersion = rootProject.ext.android.compileSdkVersion
def _buildToolsVersion = rootProject.ext.android.buildToolsVersion
def _minSdkVersion = rootProject.ext.android.minSdkVersion
def _targetSdkVersion = rootProject.ext.android.targetSdkVersion

android {
    signingConfigs {
        release {
            storeFile file('D:\\Program Files\\Android\\workspace\\FenceRecorderKotlin\\Cloud_Hermits_old.jks')
            storePassword "\"${STORE_PASSWORD}\""
            keyAlias 'fencerecorder'
            keyPassword "\"${SIGN_KEY_PASSWORD}\""
        }
    }
    compileSdkVersion _compileSdkVersion
    buildToolsVersion _buildToolsVersion

    defaultConfig {
        applicationId "com.cloud_hermits.fencerecorder"
        minSdkVersion 24
        targetSdkVersion _targetSdkVersion
        versionCode _versionCode
        versionName _versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                def buildType = variant.buildType.name
                variant.outputs.all { output ->
                    def releaseTime = new Date().format("yyyy-MM-dd_HH_mm") //打包时间
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 修改APK名
                        def fileName = "FenceRecorder-${buildType}-v${_versionName}-${releaseTime}.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
        debug {
            android.applicationVariants.all { variant ->
                def buildType = variant.buildType.name
                variant.outputs.all { output ->
                    def releaseTime = new Date().format("yyyy-MM-dd_HH_mm") //打包时间
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 修改APK名
                        def fileName = "FenceRecorder-${buildType}-v${_versionName}-${releaseTime}.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation rootProject.ext.dependencies.androidx_kotlin
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.materialDesign
    implementation project(path: ':common')
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Room
    implementation rootProject.ext.dependencies.room_runtime
    kapt rootProject.ext.dependencies.room_compiler

    //Bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'

    // jxl
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'
}